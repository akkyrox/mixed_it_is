<%=link_to "Appointments", 'javascript:void(0)', :class => "appoint" %>
<%= link_to "Patients", patients_path%>
<%=link_to "Physicians", physicians_path %>
<%#=link_to "check fast", check_path %>
<%= link_to "export_xml", 'javascript:void(0)', :class => 'export_it'%>
<%= link_to "Export Double Ajax", 'javascript:void(0)', :class => 'double_ajax'%>

<!-- https://www.create.net/support/218-how-to-pin-point-multiple-locations-on-google-maps.html -->
<!--<iframe src="https://mapsengine.google.com/map/embed?mid=z1InabQWXKac.keI5nIKpQoK0" width="640" height="480"></iframe>-->
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?v=3&amp;sensor=false"></script>
<div id="map_div" style="height: 400px;"></div>

<style>
    body {
        margin: 0;
        padding: 0;
        font: 12px sans-serif;
    }
    h1, p {
        margin: 0;
        padding: 0;
    }
</style>
<script>
    /*
     * declare map as a global variable
     */
    var map;

    /*
     * use google maps api built-in mechanism to attach dom events
     */
    google.maps.event.addDomListener(window, "load", function () {

        /*
         * create map
         */
        var map = new google.maps.Map(document.getElementById("map_div"), {
            center: new google.maps.LatLng(33.808678, -117.918921),
            zoom: 14,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        /*
         * create infowindow (which will be used by markers)
         */
        var infoWindow = new google.maps.InfoWindow();

        /*
         * marker creater function (acts as a closure for html parameter)
         */
        function createMarker(options, html) {
            var marker = new google.maps.Marker(options);
            if (html) {
                google.maps.event.addListener(marker, "click", function () {
                    infoWindow.setContent(html);
                    infoWindow.open(options.map, this);
                });
            }
            return marker;
        }

        /*
         * add markers to map
         */
        var marker0 = createMarker({
            position: new google.maps.LatLng(33.808678, -117.918921),
            map: map,
            icon: "http://1.bp.blogspot.com/_GZzKwf6g1o8/S6xwK6CSghI/AAAAAAAAA98/_iA3r4Ehclk/s1600/marker-green.png"
        }, "<h1>Marker 0</h1><p>This is the home marker.</p>");

        var marker1 = createMarker({
            position: new google.maps.LatLng(33.818038, -117.928492),
            map: map
        }, "<h1>Marker 1</h1><p>This is marker 1</p>");

        var marker2 = createMarker({
            position: new google.maps.LatLng(33.803333, -117.915278),
            map: map
        }, "<h1>Marker 2</h1><p>This is marker 2</p>");
    });

</script>

<script>

    $('.double_ajax').click(function(){

        var a = "testing";
        $.ajax({
            type: "POST",
            dataType: "html",
            url: "/export_ajax",
            data: "check=" + a,
            beforeSend: function (xhr) {
                xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
            },
            success: function (data) {
                console.log(data);
                next_ajax_func(data)
            }
        })

    });


    var next_ajax_func = function(data) {
        console.log(data);
        $.ajax({
            type: "POST",
            dataType: "html",
            url: "/to_check",
            beforeSend: function (xhr) {
                xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
            },
            success: function (data) {
                console.log(data);
                createInterval(funca,data,5000);

            }
        });
    };

    function funca(data,intercast) {
        console.log("second place");
        console.log(intercast);
        $.ajax({
            type: "POST",
            dataType: "html",
            url: "/to_clear_it",
            beforeSend: function (xhr) {
                xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
            },
            success: function (data) {
                console.log(data);
                console.log(intercast);
                clearInterval(intercast);
            }
        });
    }

    function createInterval(f,data,interval)
    {
        var intercast  = setInterval(function () {
            f(data,intercast);
            console.log("im here");
        }, interval);
    }


    $('.appoint').click(function(){
        $.ajax({
            type: "GET",
            dataType: "xml",

            url: "/appointments"

        })
    });
</script>